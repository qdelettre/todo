version: "3"
services:
  backend:
    # Uncomment the next line to use a non-root user for all processes. You can also
    # simply use the "remoteUser" property in devcontainer.json if you just want VS Code
    # and its sub-processes (terminals, tasks, debugging) to execute as the user. On Linux,
    # you may need to update USER_UID and USER_GID in .devcontainer/Dockerfile to match your
    # user if not 1000. See https://aka.ms/vscode-remote/containers/non-root for details.
    # user: vscode

    # Using a Dockerfile is optional, but included for completeness.
    build:
      context: .
      dockerfile: Dockerfile

    # Uncomment to expose one or more ports
    # ports:
    #  - "3000:3000"

    volumes:
      # This is where VS Code should expect to find your project's source code
      # and the value of "workspaceFolder" in .devcontainer/devcontainer.json
      - ..:/workspace:cached


      # Uncomment the next line to use Docker from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker-compose for details.
      # - /var/run/docker.sock:/var/run/docker.sock

    # Uncomment the next four lines if you will use a ptrace-based debugger like C++, Go, and Rust.
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined

    network_mode: "host"

    ports:
      - 8000:8000

    depends_on:
      - db

    # Overrides default command so things don't shut down after the process ends.
    command: /bin/sh -c "while sleep 1000; do :; done"

  db:
    image: postgres
    ports:
      - 5432:5432
    env_file:
      - ../db.env
